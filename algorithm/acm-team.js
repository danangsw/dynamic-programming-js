/**
 * https://www.hackerrank.com/challenges/acm-icpc-team/problem
 * 
 * Complete the 'acmTeam' function below.
 *
 * The function is expected to return an INTEGER_ARRAY.
 * The function accepts STRING_ARRAY topic as parameter.
 */

function acmTeam(topic) {
    // Write your code here
    let countOr = 0
    let maxOr = 0

    for (let i = 0; i < topic.length-1; i++) {
        for (let j = i+1; j < topic.length; j++) {
            let totalOr = BigInt('0b' + topic[i]) | BigInt('0b' + topic[j]);
            totalOr = totalOr.toString(2).replace(/0+/g, '').length; 
            if (totalOr > maxOr) {
                maxOr = totalOr;
                countOr = 1;
            }
            else if (totalOr === maxOr) { 
                countOr++;
            }
        }
    }
    return [maxOr, countOr];
}

console.log(acmTeam(['10101', '11100', '11010', '00101'])); // [5, 2]
console.log(acmTeam(['00001', '00010', '00011', '00100'])); // [3, 1]
console.log(acmTeam(['10101', '11110', '00010'])); // [5, 1]
console.log(acmTeam([




    '10000110000101001010001001100100111111001101101100001010000110000000100001001011101010011110100111100010011101011100110100011011001110011010111110101101101101100001101101010011101010010011111111011110111010010011001110000111111000111101001101001011100111001001100000011000111111000110011011011111100101100110001011100100111101000111100000010000000101011010100110101110010100000110101111101111110000000010011011101001110001001000010000101000101100001000110001100011100001111011111010000111100010010000',





// [5, 1]


let bigBinaryStringyour very large binary string
let bigInt = BigInt('0b' + bigBinaryString);
let bigIntX = BigInt(`0b${bigBinaryString}`);

console.log({ bigInt, bigIntX }, bigInt === bigIntX);
console.log(bigBinaryString.replace(/0+/g, ''));